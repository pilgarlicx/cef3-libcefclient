MAKE = nmake        # Visual Studio make tool(much like the Unix `make`)
TOUCH = type NUL >  # Unix `touch` replacement in Batch

CMAKE_GENERATOR = Visual Studio 10
CMAKE_BUILD_DIR = $(MAKEDIR)\build  # Generated project files/makefiles are
                                    # here
CMAKE_INSTALL_DIR = $(MAKEDIR)\install  # Install dir
RUNTIME_OUTPUT_DIR = $(MAKEDIR)\output # Executable output dir
ARCHIVE_OUTPUT_DIR = $(MAKEDIR)\output # Executable output dir
LIBRARY_OUTPUT_DIR = $(MAKEDIR)\output # Executable output dir
CMAKE_INSTALL_CONFIG = Release  # Can be set to MinSizeRel to reduce file size

CMAKEFILES = CMakeLists.txt

.PHONY:

all: build install

build: Debug Release

Debug Release MinSizeRel RelWithDebInfo: run-cmake
    cmake --build "$(CMAKE_BUILD_DIR)" --config $@ --use-stderr

install: run-cmake
    cmake --build "$(CMAKE_BUILD_DIR)" --config $(CMAKE_INSTALL_CONFIG) --target install --use-stderr

run-cmake: $(CMAKEFILES)
    if not exist "$(CMAKE_BUILD_DIR)" mkdir "$(CMAKE_BUILD_DIR)"
    pushd "$(CMAKE_BUILD_DIR)" && \
    cmake -G "$(CMAKE_GENERATOR)" \
        -DCMAKE_INSTALL_PREFIX="$(CMAKE_INSTALL_DIR)" \
        -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="$(RUNTIME_OUTPUT_DIR)" \
        -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(ARCHIVE_OUTPUT_DIR)" \
        -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(LIBRARY_OUTPUT_DIR)" \
        .. && \
    popd && \
    $(TOUCH) $@

FORCE:

